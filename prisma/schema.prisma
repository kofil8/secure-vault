generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum fileType {
  pdf
  docx
  excel
  png
  jpg
  jpeg
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  email        String   @unique
  password     String
  name         String
  phoneNumber  String?
  profileImage String?
  bio          String?
  refreshToken String?
  securityQA   Json? // Stores { question: string, answer: string }[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  files        file[]
  activityLogs ActivityLog[]
  securityQAs  securityQA[]

  @@map("users")
}

model file {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  fileName  String
  fileType  fileType
  fileSize  Int
  fileUrl   String // If only URL
  filePath  String
  deletedAt DateTime? // Soft delete support
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("files")
}

model securityQA {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  question  String
  answer    String
  createdAt DateTime @default(now())

  @@map("security_qas")
}

model ActivityLog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  action    String
  meta      Json?
  createdAt DateTime @default(now())

  @@map("activity_logs")
}
